from aiogram.types import Message, ParseMode, CallbackQuery
from aiogram.utils.markdown import markdown_decoration
from tgbot.models.keyboards import WelcomeKeyboard
from tgbot.services.repository import TelegramUserRepo, EventRepo, HabitRepo


async def user_start(
    msg: Message,
    tg_user_repo: TelegramUserRepo,
):
    user = tg_user_repo.get_or_create(
        telegram_id=msg.from_user.id,
        first_name=msg.from_user.first_name,
        last_name=msg.from_user.last_name,
        user_nickname=msg.from_user.username,
        default="telegram_id",
    )

    keyboard = WelcomeKeyboard.get()
    habits = tg_user_repo.get_habits(user)

    welcome_text = markdown_decoration.bold("üëã–ü—Ä–∏–≤–µ—Ç {}!\n\n".format(user.full_name))
    if not len(habits):
        welcome_text += "üòî–£ —Ç–µ–±—è –≤—Å–µ –µ—â–µ –Ω–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–∫—Ä–µ–ø–ª—è—Ç—å! \n\n\nüöÄ*–£—Å–∫–æ—Ä—è–π—Å—è!*"
    else:
        welcome_text += "–°–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è: \n"
        for idx, habit in enumerate(habits):
            h_text = markdown_decoration.bold("{}. {}".format(
                idx + 1, habit.name.strip()
            ))
            welcome_text += h_text + "\n"
        welcome_text += "\n\nüöÄ*–ü–æ–ª–µ—Ç–µ–ª–∏!*"

    await msg.bot.send_message(
        chat_id=msg.from_user.id,
        text=welcome_text,
        reply_markup=keyboard,
        parse_mode=ParseMode.MARKDOWN
    )
